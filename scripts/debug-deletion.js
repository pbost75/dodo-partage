// Script de d√©bogage pour la suppression d'annonce PARTAGE-210986-X609O3

async function debugDeletion() {
  console.log('üîç D√©bogage suppression annonce PARTAGE-210986-X609O3\n');
  
  const announcementId = 'recPVmPFgV2VhxGEK';
  const announcementRef = 'PARTAGE-210986-X609O3';
  
  try {
    // 1. V√©rifier les donn√©es de l'annonce
    console.log('1Ô∏è‚É£ R√©cup√©ration des donn√©es de l\'annonce...');
    const getResponse = await fetch('https://www.dodomove.fr/partage/api/get-announcements');
    
    if (getResponse.ok) {
      const result = await getResponse.json();
      const announcement = result.data.find(ann => ann.id === announcementId);
      
      if (announcement) {
        console.log('‚úÖ Annonce trouv√©e:');
        console.log('   - ID:', announcement.id);
        console.log('   - R√©f√©rence:', announcement.reference);
        console.log('   - Statut:', announcement.status);
        console.log('   - Auteur:', announcement.author);
        console.log('   - D√©part:', announcement.departure);
        console.log('   - Arriv√©e:', announcement.arrival);
      } else {
        console.log('‚ùå Annonce non trouv√©e dans la liste');
        return;
      }
    }
    
    // 2. Tester l'acc√®s direct aux donn√©es backend
    console.log('\n2Ô∏è‚É£ Test direct backend pour cette annonce...');
    const backendResponse = await fetch(`https://web-production-7b738.up.railway.app/api/partage/get-announcements?reference=${announcementRef}`);
    
    if (backendResponse.ok) {
      const backendResult = await backendResponse.json();
      console.log('‚úÖ Backend r√©pond');
      console.log('Nombre d\'annonces backend:', backendResult.data?.length || 0);
      
      if (backendResult.data && backendResult.data.length > 0) {
        const backendAnn = backendResult.data.find(ann => ann.reference === announcementRef);
        if (backendAnn) {
          console.log('üìã Donn√©es compl√®tes backend:');
          console.log('   - delete_token pr√©sent:', backendAnn.delete_token ? '‚úÖ OUI' : '‚ùå NON');
          console.log('   - edit_token pr√©sent:', backendAnn.edit_token ? '‚úÖ OUI' : '‚ùå NON');
          console.log('   - Status:', backendAnn.status);
          console.log('   - Email:', backendAnn.contact_email);
          
          if (backendAnn.delete_token) {
            console.log('   - Delete token:', backendAnn.delete_token.substring(0, 20) + '...');
            
            // 3. Test de r√©cup√©ration pour suppression
            console.log('\n3Ô∏è‚É£ Test r√©cup√©ration pour suppression...');
            const deleteFormResponse = await fetch(`https://web-production-7b738.up.railway.app/api/partage/delete-form/${backendAnn.delete_token}`);
            
            console.log('Status delete-form:', deleteFormResponse.status);
            
            if (deleteFormResponse.ok) {
              const deleteFormResult = await deleteFormResponse.json();
              console.log('‚úÖ Delete form accessible');
              console.log('Donn√©es retourn√©es:', deleteFormResult.data);
              
              // 4. Test de suppression (DRY RUN - ne pas r√©ellement supprimer)
              console.log('\n4Ô∏è‚É£ Simulation suppression (DRY RUN)...');
              console.log('üö´ Simulation seulement - pas de vraie suppression');
              console.log('URL qui serait appel√©e:', 'POST https://web-production-7b738.up.railway.app/api/partage/confirm-deletion');
              console.log('Payload qui serait envoy√©:', {
                deleteToken: backendAnn.delete_token,
                reason: 'found_solution'
              });
              
            } else {
              const errorText = await deleteFormResponse.text();
              console.log('‚ùå Delete form inaccessible');
              console.log('Erreur:', errorText.substring(0, 300));
            }
            
          } else {
            console.log('‚ùå Pas de delete_token - Cette annonce a √©t√© cr√©√©e avant l\'impl√©mentation');
          }
        }
      }
    } else {
      console.log('‚ùå Backend inaccessible:', backendResponse.status);
    }
    
    // 5. V√©rifier la structure des donn√©es depuis Airtable directement
    console.log('\n5Ô∏è‚É£ Informations pour diagnostic...');
    console.log('Si delete_token manque, c\'est que l\'annonce a √©t√© cr√©√©e avant l\'impl√©mentation');
    console.log('Des tokens doivent √™tre g√©n√©r√©s pour les anciennes annonces');
    console.log('Ou il faut cr√©er une nouvelle annonce pour tester');
    
  } catch (error) {
    console.error('‚ùå Erreur durant le debug:', error.message);
  }
}

debugDeletion(); 